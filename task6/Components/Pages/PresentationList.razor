@page "/"
@using task6.Models
@using task6.Services.IServices
@using Microsoft.AspNetCore.Components.Web
@inject IPresentationService PresentationService
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@inject ISessionStorageService SessionStorage

<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-lg-10">
            <div class="text-center mb-5">
                <h1 class="display-5 fw-bold text-primary mb-3">Collaborative Presentations</h1>
                <p class="lead text-muted">Seamlessly create and share presentations with your team</p>
            </div>

            @if (!string.IsNullOrEmpty(UserNickname))
            {
                <div class="alert alert-soft-primary d-flex align-items-center mb-4" role="alert">
                    <div class="d-flex align-items-center">
                        <i class="bi bi-person-circle me-3 text-primary fs-4"></i>
                        <div>
                            Welcome, <strong class="ms-1">@UserNickname</strong>
                        </div>
                    </div>
                </div>

                <div class="d-flex justify-content-between align-items-center mb-4">
                    <h2 class="h4 mb-0">Your Presentations</h2>
                    <button class="btn btn-primary" @onclick="ShowCreateModal">
                        <i class="bi bi-plus-lg me-2"></i>New Presentation
                    </button>
                </div>

                <div class="card border-0 shadow-sm">
                    <div class="card-body p-0">
                        @if (Presentations == null)
                        {
                            <div class="text-center py-5">
                                <div class="spinner-border text-primary" role="status">
                                    <span class="visually-hidden">Loading...</span>
                                </div>
                                <p class="mt-3 text-muted">Loading presentations...</p>
                            </div>
                        }
                        else if (!Presentations.Any())
                        {
                            <div class="text-center py-5">
                                <i class="bi bi-folder-x text-muted display-4 mb-3"></i>
                                <p class="h5 text-muted mb-4">No presentations yet</p>
                                <button class="btn btn-outline-primary" @onclick="ShowCreateModal">
                                    <i class="bi bi-plus-lg me-2"></i>Create Your First Presentation
                                </button>
                            </div>
                        }
                        else
                        {
                            <div class="row g-4">
                                @foreach (var presentation in Presentations)
                                {
                                    <div class="col-md-6 col-lg-4">
                                        <div class="card h-100 border-0 shadow-sm hover-shadow-lg transition-all"
                                             style="cursor: pointer;"
                                             @onclick="() => JoinPresentation(presentation.Id)">
                                            <div class="card-body p-4">
                                                <div class="d-flex align-items-center mb-3">
                                                    <div class="bg-primary bg-opacity-10 p-3 rounded-circle me-3">
                                                        <i class="bi bi-file-earmark-slides text-primary fs-4"></i>
                                                    </div>
                                                    <div class="overflow-hidden">
                                                        <h5 class="card-title h6 mb-1 text-truncate">@presentation.Title</h5>
                                                        <p class="text-muted small mb-0">
                                                            <i class="bi bi-person-circle me-1"></i>@presentation.CreatorNickname
                                                        </p>
                                                    </div>
                                                </div>
                                                <div class="d-flex justify-content-between align-items-center">
                                                    <span class="badge bg-light text-dark">
                                                        <i class="bi bi-calendar me-1"></i>
                                                        @presentation.CreatedAt.ToString("MMM dd, yyyy")
                                                    </span>
                                                    <span class="text-primary small fw-bold">
                                                        Join <i class="bi bi-arrow-right"></i>
                                                    </span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                    </div>
                </div>
            }
            else
            {
                <div class="row justify-content-center">
                    <div class="col-md-6">
                        <div class="card border-0 shadow-sm">
                            <div class="card-body p-5 text-center">
                                <i class="bi bi-people-fill text-primary display-4 mb-4"></i>
                                <h2 class="h3 mb-3">Get Started</h2>
                                <p class="text-muted mb-4">Enter a nickname to begin collaborating</p>

                                <div class="form-floating mb-4">
                                    <input type="text" class="form-control" id="nicknameInput"
                                           placeholder="Your Nickname"
                                           @bind="NicknameInput"
                                           @onkeyup="HandleEnterKey" />
                                    <label for="nicknameInput">Your Nickname</label>
                                </div>

                                <button class="btn btn-primary btn-lg w-100" @onclick="SetNickname">
                                    Continue <i class="bi bi-arrow-right-short ms-2"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@if (IsModalVisible)
{
    <div class="modal fade show" tabindex="-1" style="display: block;" aria-modal="true" role="dialog">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content shadow-lg border-0">
                <div class="modal-header border-0 pb-0">
                    <h5 class="modal-title">Create New Presentation</h5>
                    <button type="button" class="btn-close" @onclick="HideCreateModal"></button>
                </div>
                <div class="modal-body pt-2">
                    <div class="form-floating">
                        <input type="text" class="form-control" id="presentationTitle"
                               placeholder="Presentation Title"
                               @bind="NewPresentationTitle"
                               @onkeyup="HandleCreateEnterKey" />
                        <label for="presentationTitle">Presentation Title</label>
                    </div>
                </div>
                <div class="modal-footer border-0">
                    <button type="button" class="btn btn-outline-secondary" @onclick="HideCreateModal">Cancel</button>
                    <button type="button" class="btn btn-primary" @onclick="CreatePresentation">
                        Create Presentation
                    </button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-backdrop fade show"></div>
}

@code {
    private string UserNickname { get; set; }
    private string NicknameInput { get; set; }
    private List<Presentation> Presentations { get; set; }
    private string NewPresentationTitle { get; set; }
    private bool IsModalVisible { get; set; } = false;

    private async Task SetNickname()
    {
        if (!string.IsNullOrWhiteSpace(NicknameInput))
        {
            UserNickname = NicknameInput.Trim();
            await SessionStorage.SetNicknameAsync(UserNickname);
            var userId = await SessionStorage.GetUserIdAsync();
            if (userId == Guid.Empty)
            {
                userId = Guid.NewGuid();
                await SessionStorage.SetUserIdAsync(userId);
            }
            await LoadPresentations();
        }
    }

    private async Task LoadPresentations()
    {
        Presentations = await PresentationService.GetAllPresentationsAsync();
    }

    private void ShowCreateModal()
    {
        NewPresentationTitle = string.Empty;
        IsModalVisible = true;
    }

    private void HideCreateModal()
    {
        IsModalVisible = false;
    }

    private async Task CreatePresentation()
{
    if (!string.IsNullOrWhiteSpace(NewPresentationTitle))
    {
        var userId = await SessionStorage.GetUserIdAsync();
        var presentation = await PresentationService.CreatePresentationAsync(
            NewPresentationTitle.Trim(),
            UserNickname,
            userId);

        HideCreateModal();

        if (presentation != null)
        {
            NavigationManager.NavigateTo($"/presentation/{presentation.Id}");
        }
    }
}

    private void JoinPresentation(Guid presentationId)
    {
        NavigationManager.NavigateTo($"/presentation/{presentationId}");
    }

    private async Task HandleEnterKey(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            await SetNickname();
        }
    }

    private async Task HandleCreateEnterKey(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            await CreatePresentation();
        }
    }
}